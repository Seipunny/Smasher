import{r as V,j as Q}from"./react-LlHOpfm0.js";import{E as X,S as Y,A as tt,V as r,H as et,C as st,a as R,b as N,M as w,P as a,c as ot,d as B,T as H,B as it}from"./@babylonjs-D5aF5YGD.js";import{C as nt}from"./cannon-DkVCJKaD.js";const pt=()=>{const z=V.useRef(null);return V.useEffect(()=>{const C=z.current;if(!C)return;const E=t=>t.preventDefault();document.addEventListener("touchstart",E,{passive:!1}),document.addEventListener("touchmove",E,{passive:!1});const L=new X(C,!0),s=new Y(L);let G=0;const T=10,m=1,u=2,f=4,c=8,D=16,d=new tt("camera",Math.PI/2,Math.PI/2,10,new r(0,25,0),s);d.mode=1,d.attachControl(C,!0),d.lowerRadiusLimit=d.upperRadiusLimit=d.radius;const b=()=>{const t=C.width/C.height,e=10,i=e/t;d.orthoLeft=-e/2,d.orthoRight=e/2,d.orthoTop=i/2,d.orthoBottom=-i/2};window.addEventListener("resize",b),b();const $=new et("light",new r(Math.sin(Math.PI/18),1,Math.cos(Math.PI/18)),s);$.intensity=.7;const j=new st(!0,10,nt);s.enablePhysics(new r(0,-9.81,0),j);const O=(t,e,i)=>{const o=w.CreateBox(t,{width:10,height:1,depth:10},s);o.position.y=e,o.physicsImpostor=new a(o,a.BoxImpostor,{mass:0,restitution:.9},s);const n=new R(`${t}Material`,s);return n.diffuseColor=new N(.5,.5,.5),o.material=n,o.physicsImpostor.physicsBody.collisionFilterGroup=i,o.physicsImpostor.physicsBody.collisionFilterMask=m|u|f|c,o};O("ground",25,f),O("lowerPlatform",20,c),(()=>{const t=w.CreateBox("greenBox",{width:1,height:1,depth:10},s);t.position.y=21,t.position.x=-4.5,t.physicsImpostor=new a(t,a.BoxImpostor,{mass:0,restitution:.9},s);const e=new R("greenBoxMaterial",s);e.diffuseColor=new N(0,1,0),t.material=e,t.physicsImpostor.physicsBody.collisionFilterGroup=D,t.physicsImpostor.physicsBody.collisionFilterMask=m|c;let i=1;const o=.05,n=-4.5,M=4.5;s.onBeforeRenderObservable.add(()=>{t.position.x+=i*o,t.position.x>=M?(t.position.x=M,i=-1):t.position.x<=n&&(t.position.x=n,i=1),s.meshes.forEach(P=>{P.name.startsWith("fragment")&&t.intersectsMesh(P,!1)&&(P.dispose(),G+=1,I.text=`Balance: ${G}`)})})})();const W=()=>{if(s.meshes.filter(e=>e.name==="box"&&!e.isCrushed).length<T){const e=w.CreateBox("box",{size:1},s);e.position=new r(Math.random()*4-2,37,Math.random()*4-2),e.rotation=new r(Math.random()*Math.PI,Math.random()*Math.PI,Math.random()*Math.PI),e.physicsImpostor=new a(e,a.BoxImpostor,{mass:2,restitution:.5},s),e.physicsImpostor.physicsBody.collisionFilterGroup=m|u|f|c,e.physicsImpostor.physicsBody.collisionFilterMask=m|u|f|c,e.isCrushed=!1}},v=(t,e,i,o)=>{const n=w.CreateBox("wall",{width:t,height:e,depth:i},s);n.position=o,n.isVisible=!1,n.physicsImpostor=new a(n,a.BoxImpostor,{mass:0,restitution:.9},s),n.physicsImpostor.physicsBody.collisionFilterGroup=m,n.physicsImpostor.physicsBody.collisionFilterMask=m|u|f|c};v(10,40,1,new r(0,20,-5.5)),v(10,40,1,new r(0,20,5.5)),v(1,40,10,new r(-5.5,20,0)),v(1,40,10,new r(5.5,20,0)),v(10,1,10,new r(0,40,0));const F=new R("pressMaterial",s);F.diffuseColor=new N(0,0,0);const l=w.CreateBox("leftPress",{width:2,height:3,depth:10},s);l.position=new r(-4.5,27,0),l.material=F,l.physicsImpostor=new a(l,a.BoxImpostor,{mass:0,restitution:.9},s),l.physicsImpostor.physicsBody.collisionFilterGroup=u,l.physicsImpostor.physicsBody.collisionFilterMask=m|u|f|c;const p=w.CreateBox("rightPress",{width:2,height:3,depth:10},s);p.position=new r(4.5,27,0),p.material=F,p.physicsImpostor=new a(p,a.BoxImpostor,{mass:0,restitution:.9},s),p.physicsImpostor.physicsBody.collisionFilterGroup=u,p.physicsImpostor.physicsBody.collisionFilterMask=m|u|f|c;let A=!1;const Z=t=>{const i=w.CreateBox("fragment1",{size:.5},s);i.position=new r(t.x-.25,t.y,t.z),i.physicsImpostor=new a(i,a.BoxImpostor,{mass:1,restitution:.5},s),i.physicsImpostor.physicsBody.collisionFilterGroup=c,i.physicsImpostor.physicsBody.collisionFilterMask=m|c;const o=w.CreateBox("fragment2",{size:.5},s);o.position=new r(t.x+.25,t.y,t.z),o.physicsImpostor=new a(o,a.BoxImpostor,{mass:1,restitution:.5},s),o.physicsImpostor.physicsBody.collisionFilterGroup=c,o.physicsImpostor.physicsBody.collisionFilterMask=m|c;const n=M=>{if(M.physicsImpostor){const P=new r((Math.random()-.5)*2,(Math.random()-.5)*2,(Math.random()-.5)*2).normalize().scale(10);M.physicsImpostor.applyImpulse(P,M.getAbsolutePosition())}};n(i),n(o)},k=()=>{s.meshes.forEach(t=>{const e=t;e.name==="box"&&!e.isCrushed&&e.intersectsMesh(l,!1)&&e.intersectsMesh(p,!1)&&(Z(e.position),e.isCrushed=!0,e.dispose())})},U=()=>{if(l.position.x===-4.5&&p.position.x===4.5){if(A)return;A=!0;const t=.1,e=10,i=Math.abs(-4.5- -.75)/t;let o=0;const n=setInterval(()=>{o<i?(l.position.x+=t,p.position.x-=t,o++,k()):o<2*i?(l.position.x-=t,p.position.x+=t,o++,k()):(clearInterval(n),l.position=new r(-4.5,27,0),p.position=new r(4.5,27,0),A=!1)},e)}},S=ot.CreateFullscreenUI("UI"),h=new B;h.width="200px",h.height="100px",h.horizontalAlignment=B.HORIZONTAL_ALIGNMENT_LEFT,h.verticalAlignment=B.VERTICAL_ALIGNMENT_TOP,h.isVertical=!0,h.top="10px",h.left="10px",S.addControl(h);const I=new H;I.text="Balance: 0",I.color="white",I.fontSize=24,I.width="200px",I.height="40px",h.horizontalAlignment=B.HORIZONTAL_ALIGNMENT_CENTER,h.addControl(I);const x=new H;x.text=`0/${T}`,x.color="white",x.fontSize=24,x.width="200px",x.height="40px",x.paddingTop="10px",h.addControl(x);const y=new B;y.width="100%",y.height="50px",y.horizontalAlignment=B.HORIZONTAL_ALIGNMENT_CENTER,y.verticalAlignment=B.VERTICAL_ALIGNMENT_BOTTOM,y.isVertical=!1,y.paddingBottom="10px",S.addControl(y);const g=it.CreateSimpleButton("pressButton","Press");g.width="150px",g.height="40px",g.color="white",g.background="black",g.onPointerDownObservable.add(()=>{U()}),y.addControl(g);const J=setInterval(W,1e3),q=()=>{const t=s.meshes.filter(e=>e.name==="box"&&!e.isCrushed).length;x.text=`${t}/${T}`},K=()=>{s.meshes.forEach(t=>{t.position.y<=0&&t.dispose()})};L.runRenderLoop(()=>{s.render(),K(),q()});const _=()=>{L.resize(),b()};return window.addEventListener("resize",_),()=>{clearInterval(J),L.dispose(),window.removeEventListener("resize",_),window.removeEventListener("resize",b),document.removeEventListener("touchstart",E),document.removeEventListener("touchmove",E)}},[]),Q.jsx("canvas",{ref:z,style:{width:"100vw",height:"100vh"},tabIndex:-1})};export{pt as default};
